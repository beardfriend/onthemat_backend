// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	ent "onthemat/pkg/ent"

	mock "github.com/stretchr/testify/mock"
)

// UserYogaRepository is an autogenerated mock type for the UserYogaRepository type
type UserYogaRepository struct {
	mock.Mock
}

// CreateMany provides a mock function with given fields: ctx, value, userId
func (_m *UserYogaRepository) CreateMany(ctx context.Context, value []*ent.UserYoga, userId int) error {
	ret := _m.Called(ctx, value, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*ent.UserYoga, int) error); ok {
		r0 = rf(ctx, value, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserYogaRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserYogaRepository creates a new instance of UserYogaRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserYogaRepository(t mockConstructorTestingTNewUserYogaRepository) *UserYogaRepository {
	mock := &UserYogaRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
