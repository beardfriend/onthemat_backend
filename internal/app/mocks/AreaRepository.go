// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	ent "onthemat/pkg/ent"

	mock "github.com/stretchr/testify/mock"
)

// AreaRepository is an autogenerated mock type for the AreaRepository type
type AreaRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, d, sigungu
func (_m *AreaRepository) Create(ctx context.Context, d *ent.AreaSiDo, sigungu []*ent.AreaSiGungu) error {
	ret := _m.Called(ctx, d, sigungu)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ent.AreaSiDo, []*ent.AreaSiGungu) error); ok {
		r0 = rf(ctx, d, sigungu)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewAreaRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewAreaRepository creates a new instance of AreaRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAreaRepository(t mockConstructorTestingTNewAreaRepository) *AreaRepository {
	mock := &AreaRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
