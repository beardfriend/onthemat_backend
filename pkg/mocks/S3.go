// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	io "io"

	manager "github.com/aws/aws-sdk-go-v2/feature/s3/manager"
	mock "github.com/stretchr/testify/mock"
)

// S3 is an autogenerated mock type for the S3 type
type S3 struct {
	mock.Mock
}

// SetConfig provides a mock function with given fields:
func (_m *S3) SetConfig() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Upload provides a mock function with given fields: key, file
func (_m *S3) Upload(key string, file io.ReadSeeker) *manager.UploadOutput {
	ret := _m.Called(key, file)

	var r0 *manager.UploadOutput
	if rf, ok := ret.Get(0).(func(string, io.ReadSeeker) *manager.UploadOutput); ok {
		r0 = rf(key, file)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*manager.UploadOutput)
		}
	}

	return r0
}

type mockConstructorTestingTNewS3 interface {
	mock.TestingT
	Cleanup(func())
}

// NewS3 creates a new instance of S3. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewS3(t mockConstructorTestingTNewS3) *S3 {
	mock := &S3{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
